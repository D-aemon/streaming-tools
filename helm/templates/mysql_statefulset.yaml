{{- if .Values.mysql.enable }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mysql
  name: mysql
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql-headless
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - args:
            - --defaults-file=/etc/mysql-conf/my.cnf
            - --user=root
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "{{ .Values.mysql.password }}"
            - name: MYSQL_USER_HOST
              value: '%'
            - name: MYSQL_ROOT_HOST
              value: '%'
            - name: MYSQL_PORT
              value: "3306"
            - name: TZ
              value: Asia/Shanghai
            - name: LANG
              value: en_US.UTF-8
          image: "{{ .Values.mysql.image }}"
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
            - containerPort: 3306
              name: mysql
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
            - mountPath: /etc/mysql-conf
              name: mysql-conf
            - mountPath: /docker-entrypoint-initdb.d/dump.sql
              name: dump
              subPath: dump.sql
          resources:
        {{- toYaml .Values.mysql.resources | nindent 12 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 600
      volumes:
        - persistentVolumeClaim:
            claimName: mysql-data
          name: mysql-data
        - configMap:
            name: mysql-conf
          name: mysql-conf
        - configMap:
            name: dump
            items:
              - key: dump.sql
                path: dump.sql
          name: dump
  updateStrategy:
    type: RollingUpdate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-headless
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - port: 3306
      targetPort: 3306
    {{- if .Values.mysql.service.type }}
      nodePort: {{ .Values.mysql.service.nodePort }}
    {{- end }}
  selector:
    app: mysql
  {{- if eq .Values.mysql.service.type "" }}
  type: ClusterIP
  {{- else }}
  type: {{ .Values.mysql.service.type }}
  {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-conf
  namespace: {{ .Release.Namespace }}
data:
  my.cnf: |-
    [mysqld]
    pid-file        = /var/run/mysqld/mysqld.pid
    socket          = /var/run/mysqld/mysqld.sock
    datadir         = /var/lib/mysql
    secure-file-priv= NULL
    skip-host-cache
    skip-name-resolve
    binlog-format="ROW"
    log-bin=/var/lib/mysql/binlog
    server-id=1
    sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'
{{/*---*/}}
{{/*apiVersion: v1*/}}
{{/*kind: ConfigMap*/}}
{{/*metadata:*/}}
{{/*  name: qkd-dump*/}}
{{/*  namespace: {{ .Release.Namespace }}*/}}
{{/*data:*/}}
{{/*  {{- (.Files.Glob .Values.mysql.qkd_dump_file).AsConfig | nindent 2}}*/}}
{{- end }}